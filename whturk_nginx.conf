# whturk_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix:///usr/share/nginx/backend/whturk/whturk.sock; # for a file socket
    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

#ssl redirect
server {
       listen         80 default_server;
       listen         [::]80 default_server;
       server_name    whturk.net;
       return         301 https://whturk.net;
}

# configuration of the server
server {
    # the port your site will be served on
    listen      443 ssl;
    listen      [::]:443 ssl;
    # the domain name it will serve for
    server_name whturk.net; # substitute your machine's IP address or FQDN
    charset     utf-8;
#    ssl_certificate /etc/ssl/certs/test.crt;
#    ssl_certificate_key /etc/ssl/certs/test.key;
    ssl_certificate /etc/letsencrypt/live/whturk.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/whturk.net/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA;
    ssl_prefer_server_ciphers on;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /usr/share/nginx/backend/whturk;  # your Django project's media files - amend as required
    }

    location /static {
        alias /usr/share/nginx/backend/whturk/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /usr/share/nginx/backend/whturk/uwsgi_params; # the uwsgi_params file you installed
    }
}
